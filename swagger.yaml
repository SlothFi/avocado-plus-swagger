openapi: 3.0.1
info:
  title: Avocado+ API
  description: Documentation of the Avocado+ API Functions. All API Functions must be called from https://api.avocado.gallery
  contact:
    name: 0xGhosty
    url: https://slothfi.com
  version: v1
servers:
  - url: https://api.avocado.gallery
paths:
  /CancelAddressReservation/{apikey}/{nftprojectid}/{paymentaddress}:
    get:
      tags:
        - CancelAddressReservation
      summary: Cancels an address that was initially reserved.
      description: When we call this API, the reservation of all nfts dedicated to this address will released to free state. This function can be called, when a user closes his browser or when he hit on a "Cancel Reservation" Button
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: paymentaddress
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Cancellation was successful
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: Address not found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: Address is not in active state - eg. already paid or already released to free
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "500":
          description: Internal server error - see the errormessage in the result
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /CheckAddress/{apikey}/{nftprojectid}/{address}:
    get:
      tags:
        - CheckAddress
      summary: Checks an address for state changes
      description: "You can call this api to check if a user has paid to this particular address or if the address has expired. The reserved/sold NFTs will only filled after the amount was fully paid. This is for security reasons. In the reserved state, only the nft ids and tokenamount are submitted \r\n            \r\nIMPORTANT:\r\nThis function uses an internal cache. All results will be cached for 10 seconds. You do not need to call this function more than once in 10 seconds, because the results will be the same."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the Apiresultclass with the information about the address incl. the assigned NFTs
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/CheckAddressResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/CheckAddressResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/CheckAddressResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: The address was not found in our database or not assiged to this project
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /CreateProject/{apikey}:
    post:
      tags:
        - CreateProject
      summary: Creates a new Project
      description: With this Controller you can create a new project
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectClass"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateProjectClass"
          application/*+json:
            schema:
              $ref: "#/components/schemas/CreateProjectClass"
      responses:
        "200":
          description: Returns the UploadNftResult Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/CreateNewProjectResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNewProjectResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/CreateNewProjectResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: No Image Content was provided. Send a file either as Base64 or as Link or IPFS Hash
        "406":
          description: See the errormessage in the resultset for further information
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "409":
          description: There is a conflict with the provided images. Send a file either as Base64 or as Link or IPFS Hash
        "500":
          description: Internal server error - see the errormessage in the resultset
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /DeleteNft/{apikey}/{nftprojectid}/{nftid}:
    get:
      tags:
        - DeleteNft
      summary: Deletes a nft from the database
      description: You can delete a nft, if it is not in sold or reserved state
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: nftid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns the Nft Class
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: The nft was not found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: Not Acceptable
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetOneRate/{apikey}:
    get:
      tags:
        - GetOneRate
      summary: Returns the actual price in USD for ONE
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the OneRatesClass
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/OneRatesClass"
            application/json:
              schema:
                $ref: "#/components/schemas/OneRatesClass"
            text/json:
              schema:
                $ref: "#/components/schemas/OneRatesClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetAddressForRandomNftSale/{apikey}/{nftprojectid}/{countnft}/{amount}:
    get:
      tags:
        - GetAddressForRandomNftSale
      summary: Returns an address for a random nft sale
      description: "When you call this API, you will receive an address where the buyer has to pay the amount of ONE you define. The address will be monitored until it expired. The count of nft will be reserved until it expires or the buyer has sent the ONE to this address.\r\nIf the buyer has sent the amount of ONE, the nfts will be minted and sent to his sender address and the nfts state changes to sold.\r\n\r\nIMPORTANT:\r\nPlease notice, that the call is limited to 300 address reservations per minute. You will get the error 429 if you call this routine more than 300 times a minute.\r\nPlease do not implement this function on your start page. And please prevent the call of this function from bots with a captcha."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: countnft
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: amount
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Returns the GetPaymentAddressResultClass Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: No more nft available
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: The demanded ONE amount is too less. The minimium is 5 ONE
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "429":
          description: Client Error
        "500":
          description: Internal server error - see the error message in the result
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetAddressForRandomNftSale/{apikey}/{nftprojectid}/{countnft}:
    get:
      tags:
        - GetAddressForRandomNftSale
      summary: Returns an address for a random nft sale (price from pricelist)
      description: "When call call this API, you will receive an address where the buyer has to pay the amount of ONE you define. The address will be monitored until it exipred. The count of nft will be reserved until it expires or the buyer has send the ONE to this address.\r\nIf the buyer has send the amount of ONE, the nfts will be minted and send to his senderaddress and the nfts state changes to sold.\r\n\r\nIMPORTANT:\r\nPlease notice, that the call is limited to 300 addressreservations per minute. You will get the error 429 if you call this routine more than 300 times a minute.\r\nPlease do not implement this function on your start page. And please prevent the call of this function from bots with a captcha."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: countnft
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns the GetPaymentAddressResultClass Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: No more nft available
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: The demanded ONE amount is too less. The minimium is 5 ONE
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "429":
          description: Client Error
        "500":
          description: Internal server error - see the errormessage in the result
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetAddressForSpecificNftSale/{apikey}/{nftprojectid}/{nftid}/{tokencount}/{amount}:
    get:
      tags:
        - GetAddressForSpecificNftSale
      summary: Returns an address for a specific nft sale (no random distribution)
      description: "When you call this API, you will receive an address where the buyer has to pay the amount of ONE you define. The address will be monitored until it exipred. The count of nft will be reserved until it expires or the buyer has send the ONE to this address.\r\nIf the buyer has send the amount of ONE, the nfts will be minted and send to his sender address and the nfts state changes to sold.\r\n            \r\nIMPORTANT:\r\nPlease notice, that the call is limited to 300 addressreservations per minute. You will get the error 429 if you call this routine more than 300 times a minute.\r\nPlease do not implement this function on your start page. And please prevent the call of this function from bots with a captcha."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: nftid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: tokencount
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: amount
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Returns the GetPaymentAddressResultClass Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: The id of the nft is not found or not assigned to this project
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: The demanded ONE amount is too less. The minimium is 5 ONE
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "409":
          description: There is a conflict with the selected nft. See errormessage in the resultset
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "429":
          description: Client Error
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "500":
          description: Internal server error - see the errormessage in the resultset
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetAddressForSpecificNftSale/{apikey}/{nftprojectid}/{nftid}/{tokencount}:
    get:
      tags:
        - GetAddressForSpecificNftSale
      summary: Returns an address for a specific nft sale (no random distribution) - price from pricelist or specific nft price
      description: "When you call this API, you will receive an address where the buyer has to pay the amount of ONE you define. The address will be monitored until it exipred. The count of nft will be reserved until it expires or the buyer has send the ONE to this address.\r\nIf the buyer has send the amount of ONE, the nfts will be minted and send to his senderaddress and the nfts state changes to sold.\r\n            \r\nIMPORTANT:\r\nPlease notice, that the call is limited to 300 address reservations per minute. You will get the error 429 if you call this routine more than 300 times a minute.\r\nPlease do not implement this function on your start page. And please prevent the call of this function from bots with a captcha."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: nftid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: tokencount
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns the GetPaymentAddressResultClass Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: The id of the nft is not found or not assigned to this project
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: The demanded ONE amount is too less. The minimium is 5 ONE
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "409":
          description: There is a conflict with the selected nft. See errormessage in the resultset
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "429":
          description: Client Error
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "500":
          description: Internal server error - see the errormessage in the resultset
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetAddressForSpecificNftSale/{apikey}/{nftprojectid}:
    post:
      tags:
        - GetAddressForSpecificNftSale
      summary: Returns an address for a multiple specific nfts sale (no random distribution)
      description: "When you call this API, you will receive an address where the buyer has to pay the amount of ONE you define. The address will be monitored until it exipred. The count of nft will be reserved until it expires or the buyer has send the ONE to this address.\r\nIf the buyer has send the amount of ONE, the nfts will be minted and send to his senderaddress and the nfts state changes to sold."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReserveMultipleNftsClass"
          text/json:
            schema:
              $ref: "#/components/schemas/ReserveMultipleNftsClass"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ReserveMultipleNftsClass"
      responses:
        "200":
          description: Returns the GetPaymentAddressResultClass Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/GetPaymentAddressResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: The id of the nft is not found or not assigned to this project
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: The demanded ONE amount is too less. The minimium is 5 ONE
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "409":
          description: There is a conflict with the selected nft. See errormessage in the resultset
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "429":
          description: Client Error
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "500":
          description: Internal server error - see the errormessage in the resultset
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetCounts/{apikey}/{nftprojectid}:
    get:
      tags:
        - GetCounts
      summary: Returns the count of the sold, reserved and free nfts
      description: You will get the count of all sold, reserved and free nfts of a particular project
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns the NftCountsClass
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/NftCountsClass"
            application/json:
              schema:
                $ref: "#/components/schemas/NftCountsClass"
            text/json:
              schema:
                $ref: "#/components/schemas/NftCountsClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetNftDetails/{apikey}/{nftprojectid}/{nftname}:
    get:
      tags:
        - GetNftDetails
      summary: Returns detail information about one nft specified by its name
      description: You will receive all information (fingerprint, ipfshash, etc.) about one nft with the submitted name
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: nftname
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the Nft Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/NftDetailsClass"
            application/json:
              schema:
                $ref: "#/components/schemas/NftDetailsClass"
            text/json:
              schema:
                $ref: "#/components/schemas/NftDetailsClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: The nft was not found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetNftDetailsById/{apikey}/{nftprojectid}/{nftid}:
    get:
      tags:
        - GetNftDetailsById
      summary: Returns detail information about one nft specified by Id
      description: You will receive all information (fingerprint, ipfshash, etc.) about one nfts with the submitted id
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: nftid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns the Nft Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/NftDetailsClass"
            application/json:
              schema:
                $ref: "#/components/schemas/NftDetailsClass"
            text/json:
              schema:
                $ref: "#/components/schemas/NftDetailsClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: The nft was not found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetNfts/{apikey}/{nftprojectid}/{state}/{count}/{page}:
    get:
      tags:
        - GetNfts
      summary: Returns detail information about nfts with a specific state with Pagination support.
      description: "You will receive all information (fingerprint, ipfshash, etc.) about the nfts within a specific state.\r\nState \"all\" lists all available nft in this project. The other states are: \"free\", \"reserved\", \"sold\" and \"error\""
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: state
          in: path
          required: true
          schema:
            type: string
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns a List of the NFT Class
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NFT"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NFT"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NFT"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: "The state was not known - possible states are: free, reserved, sold, error and all"
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /GetPricelist/{apikey}/{nftprojectid}:
    get:
      tags:
        - GetPricelist
      summary: Returns the actual valid pricelist for this project
      description: You will get the predefined prices for one or more nft
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns the PricelistClass
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PricelistClass"
            application/json:
              schema:
                $ref: "#/components/schemas/PricelistClass"
            text/json:
              schema:
                $ref: "#/components/schemas/PricelistClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /ListProjects/{apikey}:
    get:
      tags:
        - ListProjects
      summary: Lists all your projects
      description: "You will receive a list with all of your projects\r\n            \r\nIMPORTANT:\r\nThis function uses an internal cache. All results will be cached for 10 seconds. You do not need to call this function more than once in 10 seconds, because the results will be the same."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the ListNftProjects Class
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListNftProjects"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListNftProjects"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListNftProjects"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: Not Acceptable
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /ListProjects/{apikey}/{count}/{page}:
    get:
      tags:
        - ListProjects
      summary: Lists all your projects with pagination
      description: "You will receive a list with all of your projects\r\n            \r\nIMPORTANT:\r\nThis function uses an internal cache. All results will be cached for 10 seconds. You do not need to call this function more than once in 10 seconds, because the results will be the same."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns the ListNftProjects Class
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListNftProjects"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListNftProjects"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListNftProjects"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: Not Acceptable
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /MintAndSendRandom/{apikey}/{nftprojectid}/{countnft}/{receiveraddress}:
    get:
      tags:
        - MintAndSendRandom
      summary: Mints random Nfts and sends it to an Address
      description: When call call this API, random NFTs will be selected, minted and send to an ONE address. You will need ONE in your Account for the transaction and minting costs.
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: countnft
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: receiveraddress
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the Nft Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/MintAndSendResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/MintAndSendResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/MintAndSendResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "402":
          description: Too less ONE in your account. Fill up ONE first before try to mint and send
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: No more nft available
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: The receiveraddress is not a valid cardano address
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "409":
          description: There are pending transactions on the sender address (your account address). Please wait a second
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "500":
          description: Internal server error - see the errormessage in the result
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /MintAndSendSpecific/{apikey}/{nftprojectid}/{nftid}/{tokencount}/{receiveraddress}:
    get:
      tags:
        - MintAndSendSpecific
      summary: Mints a specific Nft and sends it to an Address
      description: When call call this API, a specific NFT will be minted and send to an ONE address. You will need ONE in your Account for the transaction and minting costs.
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: nftid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: tokencount
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: receiveraddress
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the Nft Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/MintAndSendResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/MintAndSendResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/MintAndSendResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "402":
          description: Too less ONE in your account. Fill up ONE first before try to mint and send
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: NFT no more available (already sold)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: The receiveraddress is not a valid cardano address
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "409":
          description: There are pending transactions on the sender address (your account address). Please wait a second
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "500":
          description: Internal server error - see the errormessage in the result
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /UpdateMetadata/{apikey}/{nftprojectid}/{nftid}:
    post:
      tags:
        - UpdateMetadata
      summary: Updates the Metadata for one specific NFT
      description: "With this API you can update the Metadata Override for one specific NFT\r\nIf you leave the field blank, the Metadata override will be deleted and the Metadata from the project will be used."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: nftid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadMetadataClass"
          text/json:
            schema:
              $ref: "#/components/schemas/UploadMetadataClass"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UploadMetadataClass"
      responses:
        "200":
          description: Returns the Nftdetails Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/NftDetailsClass"
            application/json:
              schema:
                $ref: "#/components/schemas/NftDetailsClass"
            text/json:
              schema:
                $ref: "#/components/schemas/NftDetailsClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: The NFT was not found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "406":
          description: See the errormessage in the resultset for further information
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "500":
          description: Internal server error - see the errormessage in the resultset
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
  /UploadNft/{apikey}/{nftprojectid}:
    post:
      tags:
        - UploadNft
      summary: Upload a File to a project and pin it to IPFS
      description: "With this API you can upload a file to IPFS and add it to a project. You can upload the file as BASE64 Content or as URL Link or as IPFS Hash.\r\nIf you submit Metadata, this Metadata will be used instead of the Metadatatemplate from the project. You can either submit Metadata or MetadataPlaceholder, but not both (because it makes no sense).\r\nThe Metadata field is optional and if you dont use it, it will use the Template from your project. It is poosible to mix both versions in one project. You can have one nft with own metadata and other nfts\r\nwith the template."
      parameters:
        - name: apikey
          in: path
          required: true
          schema:
            type: string
        - name: nftprojectid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadNftClass"
          text/json:
            schema:
              $ref: "#/components/schemas/UploadNftClass"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UploadNftClass"
      responses:
        "200":
          description: Returns the UploadNftResult Class
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UploadNftResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/UploadNftResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/UploadNftResultClass"
        "401":
          description: The access was denied. (Wrong or expired APIKEY, wrong projectid etc.)
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "404":
          description: No Image Content was provided. Send a file either as Base64 or as Link or IPFS Hash
        "406":
          description: See the errormessage in the resultset for further information
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
        "409":
          description: There is a conflict with the provided images. Send a file either as Base64 or as Link or IPFS Hash
        "500":
          description: Internal server error - see the errormessage in the resultset
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
            text/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResultClass"
components:
  schemas:
    OneRatesClass:
      type: object
      properties:
        usdRate:
          type: number
          format: float
        effectivedate:
          type: string
          format: date-time
      additionalProperties: false
    ApiErrorResultClass:
      type: object
      properties:
        resultState:
          $ref: "#/components/schemas/ResultStates"
        errorMessage:
          type: string
          nullable: true
        errorCode:
          type: integer
          format: int32
      additionalProperties: false
    CheckAddressResultClass:
      type: object
      properties:
        state:
          type: string
          nullable: true
        amount:
          type: integer
          format: int64
        hasToPay:
          type: integer
          format: int64
        payDateTime:
          type: string
          format: date-time
          nullable: true
        expiresDateTime:
          type: string
          format: date-time
          nullable: true
        transaction:
          type: string
          nullable: true
        senderAddress:
          type: string
          nullable: true
        reservedNft:
          type: array
          items:
            $ref: "#/components/schemas/NFT"
          nullable: true
      additionalProperties: false
    CreateNewProjectResultClass:
      type: object
      properties:
        projectId:
          type: integer
          format: int32
        metadata:
          type: string
          nullable: true
        policyId:
          type: string
          nullable: true
        policyScript:
          type: string
          nullable: true
        policyExpiration:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    CreateProjectClass:
      type: object
      properties:
        projectname:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        projecturl:
          type: string
          nullable: true
        tokennamePrefix:
          type: string
          nullable: true
        policyExpires:
          type: boolean
        policyLocksDateTime:
          type: string
          format: date-time
          nullable: true
        payoutWalletaddress:
          type: string
          nullable: true
        maxNftSupply:
          type: integer
          format: int32
        policy:
          $ref: "#/components/schemas/PolicyClass"
        metadata:
          type: string
          nullable: true
        addressExpiretime:
          type: integer
          format: int32
      additionalProperties: false
    GetPaymentAddressResultClass:
      type: object
      properties:
        paymentAddress:
          type: string
          nullable: true
        expires:
          type: string
          format: date-time
        oneToSend:
          type: string
          nullable: true
        debug:
          type: string
          nullable: true
      additionalProperties: false
    ListNftProjects:
      type: object
      properties:
        id:
          type: integer
          format: int32
        projectname:
          type: string
          nullable: true
        projecturl:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        free:
          type: integer
          format: int64
        sold:
          type: integer
          format: int64
        reserved:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
      additionalProperties: false
    MetadataPlaceholderClass:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    MintAndSendResultClass:
      type: object
      properties:
        sendedNft:
          type: array
          items:
            $ref: "#/components/schemas/NFT"
          nullable: true
      additionalProperties: false
    NFT:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayname:
          type: string
          nullable: true
        ipfsLink:
          type: string
          nullable: true
        gatewayLink:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        minted:
          type: boolean
        policyId:
          type: string
          nullable: true
        assetId:
          type: string
          nullable: true
        assetname:
          type: string
          nullable: true
        fingerprint:
          type: string
          nullable: true
        initialMintTxHash:
          type: string
          nullable: true
        series:
          type: string
          nullable: true
        tokenamount:
          type: integer
          format: int32
        price:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    NftCountsClass:
      type: object
      properties:
        nftTotal:
          type: integer
          format: int32
        sold:
          type: integer
          format: int32
        free:
          type: integer
          format: int32
        reserved:
          type: integer
          format: int32
        error:
          type: integer
          format: int32
      additionalProperties: false
    NftDetailsClass:
      type: object
      properties:
        id:
          type: integer
          format: int32
        ipfshash:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        displayname:
          type: string
          nullable: true
        detaildata:
          type: string
          nullable: true
        minted:
          type: boolean
        receiveraddress:
          type: string
          nullable: true
        selldate:
          type: string
          format: date-time
          nullable: true
        soldby:
          type: string
          nullable: true
        reserveduntil:
          type: string
          format: date-time
          nullable: true
        policyid:
          type: string
          nullable: true
        assetid:
          type: string
          nullable: true
        assetname:
          type: string
          nullable: true
        fingerprint:
          type: string
          nullable: true
        initialminttxhash:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        series:
          type: string
          nullable: true
        ipfsGatewayAddress:
          type: string
          nullable: true
        metadata:
          type: string
          nullable: true
        singlePrice:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    NftFile:
      type: object
      properties:
        mimetype:
          type: string
          nullable: true
        fileFromBase64:
          type: string
          nullable: true
        fileFromsUrl:
          type: string
          nullable: true
        fileFromIPFS:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        displayname:
          type: string
          nullable: true
        metadataPlaceholder:
          type: array
          items:
            $ref: "#/components/schemas/MetadataPlaceholderClass"
          nullable: true
      additionalProperties: false
    PolicyClass:
      type: object
      properties:
        policyId:
          type: string
          nullable: true
        privateVerifykey:
          type: string
          nullable: true
        privateSigningkey:
          type: string
          nullable: true
        policyScript:
          type: string
          nullable: true
      additionalProperties: false
    PricelistClass:
      type: object
      properties:
        countNft:
          type: integer
          format: int32
        priceInOne:
          type: integer
          format: int64
        priceInUsd:
          type: number
          format: float
        effectivedate:
          type: string
          format: date-time
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    ReserveMultipleNftsClass:
      type: object
      properties:
        amount:
          type: integer
          format: int64
        reserveNfts:
          type: array
          items:
            $ref: "#/components/schemas/ReserveNftsClass"
          nullable: true
      additionalProperties: false
    ReserveNftsClass:
      type: object
      properties:
        nftId:
          type: integer
          format: int32
        tokencount:
          type: integer
          format: int32
      additionalProperties: false
    ResultStates:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    UploadMetadataClass:
      type: object
      properties:
        metadata:
          type: string
          nullable: true
      additionalProperties: false
    UploadNftClass:
      type: object
      properties:
        assetName:
          type: string
          nullable: true
        previewImageNft:
          $ref: "#/components/schemas/NftFile"
        subfiles:
          type: array
          items:
            $ref: "#/components/schemas/NftFile"
          nullable: true
        metadata:
          type: string
          nullable: true
      additionalProperties: false
    UploadNftResultClass:
      type: object
      properties:
        nftId:
          type: integer
          format: int32
        ipfsHashMainnft:
          type: string
          nullable: true
        ipfsHashSubfiles:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: string
          nullable: true
      additionalProperties: false
